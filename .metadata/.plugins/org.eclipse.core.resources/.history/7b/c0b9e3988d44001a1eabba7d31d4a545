package SinglyLinkedList;

public class CalcLinkedList {
	Node head;
	Node prev;
	Node val1;
	Node val2;
	Node temp;
	Node prev2;
	
	public Node Swap(Node curr,int value1, int value2) {
		if(head == null) {
			head = new Node();
			return head;
		}
		if(value1 == value2) {
			System.out.println("Both Value are Same...");
			return head;
		}
		head = curr;
		while(curr != null) {
			if(curr.Data==value1) {
				val1 = curr;
				break;
			}
			prev = curr;
			curr = curr.Next;
		}
		 curr = head;
		 while(curr !=null) {
			 if(curr.Data == value2) {
				 val2 = curr;
				 break;
			 }
			 prev2 = curr;
			 curr = curr.Next;
		 }
		 
		 if(prev!=null) {
			 prev.Next = val2;
		 }
		 else
			 head = val2;
		 
		 if(prev2!=null) {
			 prev2.Next = val1;
		 }
		 else
			 head = val1;
		 
		 temp = val1.Next;
		 val1.Next = val2.Next;
		 val2.Next = temp;
		 
//		while(curr.Next != null) {
//			if(curr.Next.Data == value1) {
//				node1 = curr; 
//			}
//			if(curr.Data == value1) {
//				node2 = curr;
//				node3 = curr.Next;
//			}
//			if(curr.Data == value2) {
//				node4 = curr;
//				node5 = curr.Next;
//			}
//			curr = curr.Next;
//						
//		}
//		
//		node1.Next = node4;
//		node2.Next = node5;
//		node3.Next = node2;
//		node4.Next = node3;
		 return head;
//		
	}
	
	public void Insert(int data) {
		Node node = new Node();
		node.Data = data;
		node.Next = null;
		if(head == null) {
			head = node;
		}
		else {
			Node n = head;
			while(n.Next!=null) {
				n = n.Next;
			}
			n.Next = node;
		}
	}
	
	public void Show() {
		Node node = head;
		while(node.Next!=null) {
			System.out.print(node.Data);
			node = node.Next;
		}
		System.out.print(node.Data);
	}
	

}
